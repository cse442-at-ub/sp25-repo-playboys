{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kinta\\\\Documents\\\\CSE 442\\\\SettingsFrontEnd\\\\sp25-repo-playboys\\\\frontend\\\\src\\\\Settings\\\\Account.tsx\";\nimport React from \"react\";\nimport \"./Settings.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst options = [{\n  name: \"Update Profile\",\n  icon: \"./static/ProfileIcon.png\",\n  path: \"settings/account/update_profile\"\n}, {\n  name: \"Update Email\",\n  icon: \"📧\",\n  path: \"settings/account/update_email\"\n}, {\n  name: \"Update Password\",\n  icon: \"🔑\",\n  path: \"settings/account/update_password\"\n}, {\n  name: \"Linked Accounts\",\n  icon: \"🔗\",\n  path: \"settings/account/linked_accounts\"\n}, {\n  name: \"Delete Account\",\n  icon: \"🗑️\",\n  path: \"settings/account/delete_account\"\n}];\nconst SettingsAccount = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"settings-page\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"settings-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"settings-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header-text\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"menu-icon\",\n            children: \"\\u2630\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Settings-Account\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"back-button\",\n          onClick: () => window.location.href = \"#/settings\",\n          children: \"\\uD83D\\uDD19\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"option-container\",\n        children: options.map((option, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"option-button\",\n          onClick: () => window.location.href = `#/${option.path}`,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"option-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: option.icon\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: option.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n_c = SettingsAccount;\nexport default SettingsAccount;\nvar _c;\n$RefreshReg$(_c, \"SettingsAccount\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","options","name","icon","path","SettingsAccount","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","window","location","href","map","option","index","src","_c","$RefreshReg$"],"sources":["C:/Users/kinta/Documents/CSE 442/SettingsFrontEnd/sp25-repo-playboys/frontend/src/Settings/Account.tsx"],"sourcesContent":["import React from \"react\";\r\nimport { href } from \"react-router-dom\";\r\nimport \"./Settings.css\";\r\nimport path from \"path\";\r\nconst options = [\r\n  { name: \"Update Profile\", icon: \"./static/ProfileIcon.png\", path: \"settings/account/update_profile\" },\r\n  { name: \"Update Email\", icon: \"📧\", path: \"settings/account/update_email\" },\r\n  { name: \"Update Password\", icon: \"🔑\", path: \"settings/account/update_password\" },\r\n  { name: \"Linked Accounts\", icon: \"🔗\", path: \"settings/account/linked_accounts\" },\r\n  { name: \"Delete Account\", icon: \"🗑️\", path: \"settings/account/delete_account\" }\r\n];\r\n\r\nconst SettingsAccount = () => {\r\n  return (\r\n    <div className=\"settings-page\">\r\n      <div className=\"settings-container\">\r\n        <div className=\"settings-header\">\r\n          <div className=\"header-text\">\r\n            <span className=\"menu-icon\">☰</span>\r\n            <span>Settings-Account</span>\r\n          </div>\r\n          <button className=\"back-button\" onClick={() => window.location.href = \"#/settings\"}>\r\n            🔙\r\n          </button>\r\n        </div>\r\n\r\n        <div className=\"option-container\">\r\n          {options.map((option, index) => (\r\n            <button className=\"option-button\"onClick={() => window.location.href = `#/${option.path}`}>\r\n              <div key={index} className=\"option-card\">\r\n                <img src = {option.icon} />\r\n                <p>{option.name}</p>\r\n              </div>\r\n            </button>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SettingsAccount;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}