{"ast":null,"code":"import{useState,useEffect}from'react';const useMediaQuery=query=>{const[matches,setMatches]=useState(window.matchMedia(query).matches);useEffect(()=>{const mediaQuery=window.matchMedia(query);const handler=()=>setMatches(mediaQuery.matches);mediaQuery.addEventListener('change',handler);return()=>mediaQuery.removeEventListener('change',handler);},[query]);return matches;};export default useMediaQuery;","map":{"version":3,"names":["useState","useEffect","useMediaQuery","query","matches","setMatches","window","matchMedia","mediaQuery","handler","addEventListener","removeEventListener"],"sources":["C:/Users/rico/Documents/GitHub/sp25-repo-playboys/frontend/src/useMediaQuery.ts"],"sourcesContent":["import { useState, useEffect } from 'react';\r\n\r\nconst useMediaQuery = (query: string): boolean => {\r\n  const [matches, setMatches] = useState(window.matchMedia(query).matches);\r\n\r\n  useEffect(() => {\r\n    const mediaQuery = window.matchMedia(query);\r\n    const handler = () => setMatches(mediaQuery.matches);\r\n\r\n    mediaQuery.addEventListener('change', handler);\r\n    return () => mediaQuery.removeEventListener('change', handler);\r\n  }, [query]);\r\n\r\n  return matches;\r\n};\r\n\r\nexport default useMediaQuery;\r\n"],"mappings":"AAAA,OAASA,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAE3C,KAAM,CAAAC,aAAa,CAAIC,KAAa,EAAc,CAChD,KAAM,CAACC,OAAO,CAAEC,UAAU,CAAC,CAAGL,QAAQ,CAACM,MAAM,CAACC,UAAU,CAACJ,KAAK,CAAC,CAACC,OAAO,CAAC,CAExEH,SAAS,CAAC,IAAM,CACd,KAAM,CAAAO,UAAU,CAAGF,MAAM,CAACC,UAAU,CAACJ,KAAK,CAAC,CAC3C,KAAM,CAAAM,OAAO,CAAGA,CAAA,GAAMJ,UAAU,CAACG,UAAU,CAACJ,OAAO,CAAC,CAEpDI,UAAU,CAACE,gBAAgB,CAAC,QAAQ,CAAED,OAAO,CAAC,CAC9C,MAAO,IAAMD,UAAU,CAACG,mBAAmB,CAAC,QAAQ,CAAEF,OAAO,CAAC,CAChE,CAAC,CAAE,CAACN,KAAK,CAAC,CAAC,CAEX,MAAO,CAAAC,OAAO,CAChB,CAAC,CAED,cAAe,CAAAF,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}