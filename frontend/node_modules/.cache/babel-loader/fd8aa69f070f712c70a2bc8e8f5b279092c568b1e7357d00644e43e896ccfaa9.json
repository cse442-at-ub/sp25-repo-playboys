{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ronzh\\\\OneDrive\\\\Desktop\\\\CSE442\\\\sp25-repo-playboys\\\\frontend\\\\src\\\\search_result_page\\\\eventResults.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport './SearchResultPage.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst EventResults = () => {\n  _s();\n  const [events, setEvents] = useState(generateRandomEvents(10)); //should get information from backend instead of randomly generation\n  const eventsContainerRef = useRef(null);\n  const [isHovered, setIsHovered] = useState(false);\n  function generateRandomEvents(count) {\n    const events = [];\n    for (let i = 0; i < count; i++) {\n      events.push({\n        date: getRandomDate(),\n        time: getRandomTime(),\n        location: getRandomLocation(),\n        name: getRandomEventName(),\n        artist: getRandomArtist(),\n        // Added artist\n        image: './static/TheBeatlespfp.png'\n      });\n    }\n    return events;\n  }\n\n  // all these function generate randomly data, should fetch from backend to get all these data (could just be one fetch and receive a json with all information)\n  function getRandomDate() {\n    const start = new Date(2023, 0, 1);\n    const end = new Date(2024, 11, 31);\n    const randomDate = new Date(start.getTime() + Math.random() * (end.getTime() - start.getTime()));\n    return randomDate.toLocaleDateString();\n  }\n  function getRandomTime() {\n    const hours = Math.floor(Math.random() * 24);\n    const minutes = Math.floor(Math.random() * 60);\n    return `${hours.toString().padStart(2, '0')}:${minutes.toString().padStart(2, '0')}`;\n  }\n  function getRandomLocation() {\n    const locations = ['Metlife Stadium', 'Madison Square Garden', 'Staples Center', 'The O2 Arena', 'Wembley Stadium'];\n    return locations[Math.floor(Math.random() * locations.length)];\n  }\n  function getRandomEventName() {\n    const eventNames = ['Concert', 'Sports Game', 'Festival', 'Show', 'Exhibition'];\n    return eventNames[Math.floor(Math.random() * eventNames.length)];\n  }\n  function getRandomArtist() {\n    // Added function for random artist\n    const artists = ['Drake', 'Taylor Swift', 'The Weeknd', 'BeyoncÃ©', 'Ed Sheeran'];\n    return artists[Math.floor(Math.random() * artists.length)];\n  }\n  const handleScrollRight = () => {\n    if (eventsContainerRef.current) {\n      const itemWidth = 350; // Adjust based on your item width + margin\n      eventsContainerRef.current.scrollBy({\n        left: itemWidth,\n        behavior: 'smooth'\n      });\n    }\n  };\n  const handleScrollLeft = () => {\n    if (eventsContainerRef.current) {\n      const itemWidth = 350; // Adjust based on your item width + margin\n      eventsContainerRef.current.scrollBy({\n        left: -itemWidth,\n        behavior: 'smooth'\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"event-search-results\",\n    onMouseEnter: () => setIsHovered(true),\n    onMouseLeave: () => setIsHovered(false),\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"event-search-results-title\",\n      children: \"Event Search Results\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this), events.length > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"event-results-container\",\n        ref: eventsContainerRef,\n        children: events.map((event, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"event-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"event-details\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"event-date\",\n              children: event.date\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"event-time\",\n              children: event.time\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"event-location\",\n              children: event.location\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"event-artist\",\n              children: event.artist\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 37\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"event-image\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: event.image,\n              alt: event.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 33\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 21\n      }, this), isHovered && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"scroll-arrow left\",\n          onClick: handleScrollLeft,\n          children: \"\\u2190\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"scroll-arrow right\",\n          onClick: handleScrollRight,\n          children: \"\\u2192\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No events found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 9\n  }, this);\n};\n_s(EventResults, \"b7jq+xWNDAFF8eRjCl9Ptpm1qh4=\");\n_c = EventResults;\nexport default EventResults;\nvar _c;\n$RefreshReg$(_c, \"EventResults\");","map":{"version":3,"names":["React","useState","useRef","jsxDEV","_jsxDEV","Fragment","_Fragment","EventResults","_s","events","setEvents","generateRandomEvents","eventsContainerRef","isHovered","setIsHovered","count","i","push","date","getRandomDate","time","getRandomTime","location","getRandomLocation","name","getRandomEventName","artist","getRandomArtist","image","start","Date","end","randomDate","getTime","Math","random","toLocaleDateString","hours","floor","minutes","toString","padStart","locations","length","eventNames","artists","handleScrollRight","current","itemWidth","scrollBy","left","behavior","handleScrollLeft","className","onMouseEnter","onMouseLeave","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","map","event","index","src","alt","onClick","_c","$RefreshReg$"],"sources":["C:/Users/ronzh/OneDrive/Desktop/CSE442/sp25-repo-playboys/frontend/src/search_result_page/eventResults.tsx"],"sourcesContent":["import React, { useState, useRef } from 'react';\r\nimport './SearchResultPage.css';\r\n\r\nconst EventResults = () => {\r\n    const [events, setEvents] = useState(generateRandomEvents(10)); //should get information from backend instead of randomly generation\r\n    const eventsContainerRef = useRef<HTMLDivElement>(null);\r\n    const [isHovered, setIsHovered] = useState(false);\r\n\r\n    interface Event {\r\n        date: string;\r\n        time: string;\r\n        location: string;\r\n        name: string;\r\n        artist: string;\r\n        image: string;\r\n    }\r\n\r\n    function generateRandomEvents(count: number): Event[] {\r\n        const events: Event[] = [];\r\n        for (let i = 0; i < count; i++) {\r\n            events.push({\r\n                date: getRandomDate(),\r\n                time: getRandomTime(),\r\n                location: getRandomLocation(),\r\n                name: getRandomEventName(),\r\n                artist: getRandomArtist(), // Added artist\r\n                image: './static/TheBeatlespfp.png'\r\n            });\r\n        }\r\n        return events;\r\n    }\r\n\r\n    // all these function generate randomly data, should fetch from backend to get all these data (could just be one fetch and receive a json with all information)\r\n    function getRandomDate() {\r\n        const start = new Date(2023, 0, 1);\r\n        const end = new Date(2024, 11, 31);\r\n        const randomDate = new Date(start.getTime() + Math.random() * (end.getTime() - start.getTime()));\r\n        return randomDate.toLocaleDateString();\r\n    }\r\n\r\n    function getRandomTime() {\r\n        const hours = Math.floor(Math.random() * 24);\r\n        const minutes = Math.floor(Math.random() * 60);\r\n        return `${hours.toString().padStart(2, '0')}:${minutes.toString().padStart(2, '0')}`;\r\n    }\r\n\r\n    function getRandomLocation() {\r\n        const locations = ['Metlife Stadium', 'Madison Square Garden', 'Staples Center', 'The O2 Arena', 'Wembley Stadium'];\r\n        return locations[Math.floor(Math.random() * locations.length)];\r\n    }\r\n\r\n    function getRandomEventName() {\r\n        const eventNames = ['Concert', 'Sports Game', 'Festival', 'Show', 'Exhibition'];\r\n        return eventNames[Math.floor(Math.random() * eventNames.length)];\r\n    }\r\n\r\n    function getRandomArtist() { // Added function for random artist\r\n        const artists = ['Drake', 'Taylor Swift', 'The Weeknd', 'BeyoncÃ©', 'Ed Sheeran'];\r\n        return artists[Math.floor(Math.random() * artists.length)];\r\n    }\r\n\r\n    const handleScrollRight = () => {\r\n        if (eventsContainerRef.current) {\r\n            const itemWidth = 350; // Adjust based on your item width + margin\r\n            eventsContainerRef.current.scrollBy({ left: itemWidth, behavior: 'smooth' });\r\n        }\r\n    };\r\n\r\n    const handleScrollLeft = () => {\r\n        if (eventsContainerRef.current) {\r\n            const itemWidth = 350; // Adjust based on your item width + margin\r\n            eventsContainerRef.current.scrollBy({ left: -itemWidth, behavior: 'smooth' });\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div\r\n            className=\"event-search-results\"\r\n            onMouseEnter={() => setIsHovered(true)}\r\n            onMouseLeave={() => setIsHovered(false)}\r\n        >\r\n            <h2 className=\"event-search-results-title\">Event Search Results</h2>\r\n            {events.length > 0 ? (\r\n                <>\r\n                    <div className=\"event-results-container\" ref={eventsContainerRef}>\r\n                        {events.map((event, index) => (\r\n                            <div key={index} className=\"event-item\">\r\n                                <div className=\"event-details\">\r\n                                    <div className=\"event-date\">{event.date}</div>\r\n                                    <div className=\"event-time\">{event.time}</div>\r\n                                    <div className=\"event-location\">{event.location}</div>\r\n                                    <div className=\"event-artist\">{event.artist}</div> {/* Added artist */}\r\n                                </div>\r\n                                <div className=\"event-image\">\r\n                                    <img src={event.image} alt={event.name} />\r\n                                </div>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                    {isHovered && (\r\n                        <>\r\n                            <div className=\"scroll-arrow left\" onClick={handleScrollLeft}>\r\n                                â\r\n                            </div>\r\n                            <div className=\"scroll-arrow right\" onClick={handleScrollRight}>\r\n                                â\r\n                            </div>\r\n                        </>\r\n                    )}\r\n                </>\r\n            ) : (\r\n                <p>No events found.</p>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default EventResults;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AAC/C,OAAO,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEhC,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAACU,oBAAoB,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;EAChE,MAAMC,kBAAkB,GAAGV,MAAM,CAAiB,IAAI,CAAC;EACvD,MAAM,CAACW,SAAS,EAAEC,YAAY,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EAWjD,SAASU,oBAAoBA,CAACI,KAAa,EAAW;IAClD,MAAMN,MAAe,GAAG,EAAE;IAC1B,KAAK,IAAIO,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGD,KAAK,EAAEC,CAAC,EAAE,EAAE;MAC5BP,MAAM,CAACQ,IAAI,CAAC;QACRC,IAAI,EAAEC,aAAa,CAAC,CAAC;QACrBC,IAAI,EAAEC,aAAa,CAAC,CAAC;QACrBC,QAAQ,EAAEC,iBAAiB,CAAC,CAAC;QAC7BC,IAAI,EAAEC,kBAAkB,CAAC,CAAC;QAC1BC,MAAM,EAAEC,eAAe,CAAC,CAAC;QAAE;QAC3BC,KAAK,EAAE;MACX,CAAC,CAAC;IACN;IACA,OAAOnB,MAAM;EACjB;;EAEA;EACA,SAASU,aAAaA,CAAA,EAAG;IACrB,MAAMU,KAAK,GAAG,IAAIC,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC;IAClC,MAAMC,GAAG,GAAG,IAAID,IAAI,CAAC,IAAI,EAAE,EAAE,EAAE,EAAE,CAAC;IAClC,MAAME,UAAU,GAAG,IAAIF,IAAI,CAACD,KAAK,CAACI,OAAO,CAAC,CAAC,GAAGC,IAAI,CAACC,MAAM,CAAC,CAAC,IAAIJ,GAAG,CAACE,OAAO,CAAC,CAAC,GAAGJ,KAAK,CAACI,OAAO,CAAC,CAAC,CAAC,CAAC;IAChG,OAAOD,UAAU,CAACI,kBAAkB,CAAC,CAAC;EAC1C;EAEA,SAASf,aAAaA,CAAA,EAAG;IACrB,MAAMgB,KAAK,GAAGH,IAAI,CAACI,KAAK,CAACJ,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,EAAE,CAAC;IAC5C,MAAMI,OAAO,GAAGL,IAAI,CAACI,KAAK,CAACJ,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,EAAE,CAAC;IAC9C,OAAO,GAAGE,KAAK,CAACG,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,IAAIF,OAAO,CAACC,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE;EACxF;EAEA,SAASlB,iBAAiBA,CAAA,EAAG;IACzB,MAAMmB,SAAS,GAAG,CAAC,iBAAiB,EAAE,uBAAuB,EAAE,gBAAgB,EAAE,cAAc,EAAE,iBAAiB,CAAC;IACnH,OAAOA,SAAS,CAACR,IAAI,CAACI,KAAK,CAACJ,IAAI,CAACC,MAAM,CAAC,CAAC,GAAGO,SAAS,CAACC,MAAM,CAAC,CAAC;EAClE;EAEA,SAASlB,kBAAkBA,CAAA,EAAG;IAC1B,MAAMmB,UAAU,GAAG,CAAC,SAAS,EAAE,aAAa,EAAE,UAAU,EAAE,MAAM,EAAE,YAAY,CAAC;IAC/E,OAAOA,UAAU,CAACV,IAAI,CAACI,KAAK,CAACJ,IAAI,CAACC,MAAM,CAAC,CAAC,GAAGS,UAAU,CAACD,MAAM,CAAC,CAAC;EACpE;EAEA,SAAShB,eAAeA,CAAA,EAAG;IAAE;IACzB,MAAMkB,OAAO,GAAG,CAAC,OAAO,EAAE,cAAc,EAAE,YAAY,EAAE,SAAS,EAAE,YAAY,CAAC;IAChF,OAAOA,OAAO,CAACX,IAAI,CAACI,KAAK,CAACJ,IAAI,CAACC,MAAM,CAAC,CAAC,GAAGU,OAAO,CAACF,MAAM,CAAC,CAAC;EAC9D;EAEA,MAAMG,iBAAiB,GAAGA,CAAA,KAAM;IAC5B,IAAIlC,kBAAkB,CAACmC,OAAO,EAAE;MAC5B,MAAMC,SAAS,GAAG,GAAG,CAAC,CAAC;MACvBpC,kBAAkB,CAACmC,OAAO,CAACE,QAAQ,CAAC;QAAEC,IAAI,EAAEF,SAAS;QAAEG,QAAQ,EAAE;MAAS,CAAC,CAAC;IAChF;EACJ,CAAC;EAED,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;IAC3B,IAAIxC,kBAAkB,CAACmC,OAAO,EAAE;MAC5B,MAAMC,SAAS,GAAG,GAAG,CAAC,CAAC;MACvBpC,kBAAkB,CAACmC,OAAO,CAACE,QAAQ,CAAC;QAAEC,IAAI,EAAE,CAACF,SAAS;QAAEG,QAAQ,EAAE;MAAS,CAAC,CAAC;IACjF;EACJ,CAAC;EAED,oBACI/C,OAAA;IACIiD,SAAS,EAAC,sBAAsB;IAChCC,YAAY,EAAEA,CAAA,KAAMxC,YAAY,CAAC,IAAI,CAAE;IACvCyC,YAAY,EAAEA,CAAA,KAAMzC,YAAY,CAAC,KAAK,CAAE;IAAA0C,QAAA,gBAExCpD,OAAA;MAAIiD,SAAS,EAAC,4BAA4B;MAAAG,QAAA,EAAC;IAAoB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACnEnD,MAAM,CAACkC,MAAM,GAAG,CAAC,gBACdvC,OAAA,CAAAE,SAAA;MAAAkD,QAAA,gBACIpD,OAAA;QAAKiD,SAAS,EAAC,yBAAyB;QAACQ,GAAG,EAAEjD,kBAAmB;QAAA4C,QAAA,EAC5D/C,MAAM,CAACqD,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,kBACrB5D,OAAA;UAAiBiD,SAAS,EAAC,YAAY;UAAAG,QAAA,gBACnCpD,OAAA;YAAKiD,SAAS,EAAC,eAAe;YAAAG,QAAA,gBAC1BpD,OAAA;cAAKiD,SAAS,EAAC,YAAY;cAAAG,QAAA,EAAEO,KAAK,CAAC7C;YAAI;cAAAuC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,eAC9CxD,OAAA;cAAKiD,SAAS,EAAC,YAAY;cAAAG,QAAA,EAAEO,KAAK,CAAC3C;YAAI;cAAAqC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,eAC9CxD,OAAA;cAAKiD,SAAS,EAAC,gBAAgB;cAAAG,QAAA,EAAEO,KAAK,CAACzC;YAAQ;cAAAmC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,eACtDxD,OAAA;cAAKiD,SAAS,EAAC,cAAc;cAAAG,QAAA,EAAEO,KAAK,CAACrC;YAAM;cAAA+B,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,KAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAClD,CAAC,eACNxD,OAAA;YAAKiD,SAAS,EAAC,aAAa;YAAAG,QAAA,eACxBpD,OAAA;cAAK6D,GAAG,EAAEF,KAAK,CAACnC,KAAM;cAACsC,GAAG,EAAEH,KAAK,CAACvC;YAAK;cAAAiC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACzC,CAAC;QAAA,GATAI,KAAK;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAUV,CACR;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC,EACL/C,SAAS,iBACNT,OAAA,CAAAE,SAAA;QAAAkD,QAAA,gBACIpD,OAAA;UAAKiD,SAAS,EAAC,mBAAmB;UAACc,OAAO,EAAEf,gBAAiB;UAAAI,QAAA,EAAC;QAE9D;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACNxD,OAAA;UAAKiD,SAAS,EAAC,oBAAoB;UAACc,OAAO,EAAErB,iBAAkB;UAAAU,QAAA,EAAC;QAEhE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC;MAAA,eACR,CACL;IAAA,eACH,CAAC,gBAEHxD,OAAA;MAAAoD,QAAA,EAAG;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CACzB;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd,CAAC;AAACpD,EAAA,CAhHID,YAAY;AAAA6D,EAAA,GAAZ7D,YAAY;AAkHlB,eAAeA,YAAY;AAAC,IAAA6D,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}