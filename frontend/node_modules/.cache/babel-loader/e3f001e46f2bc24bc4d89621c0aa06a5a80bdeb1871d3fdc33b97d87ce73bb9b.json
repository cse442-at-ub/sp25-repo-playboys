{"ast":null,"code":"// Send email\nexport const send_forgot_pwd_email = async email => {\n  const response = await fetch(`${process.env.REACT_APP_API_URL}src/send_email_with_code.php`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      email\n    })\n  });\n  const data = await response.json();\n  if (!response.ok) throw new Error(data.error || \"Failed to send reset email\");\n  return data.message;\n};\n\n// Verify code\nexport const verifyResetToken = async code => {\n  const response = await fetch(`${API_BASE_URL}/verify_forgot_pwd_code.php`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      code\n    })\n  });\n  const data = await response.json();\n  if (!response.ok) throw new Error(data.error || \"Invalid, incorrect, or expired code\");\n  return true;\n};\n\n// Reset password\nexport const resetPassword = async (password, confirm_password) => {\n  const response = await fetch(`${API_BASE_URL}/reset_forgotten_pwd.php`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      password,\n      confirm_password\n    })\n  });\n  const data = await response.json();\n  if (!response.ok) throw new Error(data.error || \"Failed to reset password\");\n  return data.message; // Success message\n};","map":{"version":3,"names":["send_forgot_pwd_email","email","response","fetch","process","env","REACT_APP_API_URL","method","headers","body","JSON","stringify","data","json","ok","Error","error","message","verifyResetToken","code","API_BASE_URL","resetPassword","password","confirm_password"],"sources":["/Users/camdenbartlo/UB/Sem 4/CSE 442/sp25-repo-playboys/frontend/src/login_screens/forgot/api/forgot_pwd_apis.ts"],"sourcesContent":["// Send email\nexport const send_forgot_pwd_email = async ( email: string ): Promise<string> => \n{\n  const response = await fetch(`${process.env.REACT_APP_API_URL}src/send_email_with_code.php`, {\n    method: \"POST\",\n    headers: { \n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({ email }),\n  });\n\n  const data = await response.json();\n  if (!response.ok) \n    throw new Error( data.error || \"Failed to send reset email\" );\n  return data.message; \n};\n\n// Verify code\nexport const verifyResetToken = async (code: string): Promise<boolean> => \n{\n  const response = await fetch(`${API_BASE_URL}/verify_forgot_pwd_code.php`, {\n    method: \"POST\",\n    headers: { \n      \"Content-Type\": \"application/json\", \n    },\n    body: JSON.stringify({ code }),\n  });\n\n  const data = await response.json();\n  if ( !response.ok ) \n    throw new Error( data.error || \"Invalid, incorrect, or expired code\" );\n  return true; \n};\n\n// Reset password\nexport const resetPassword = async (password: string, confirm_password: string): Promise<string> => \n{\n  const response = await fetch(`${API_BASE_URL}/reset_forgotten_pwd.php`, {\n    method: \"POST\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify({ password, confirm_password }),\n  });\n\n  const data = await response.json();\n  if ( !response.ok ) throw new Error( data.error || \"Failed to reset password\" );\n  return data.message; // Success message\n};"],"mappings":"AAAA;AACA,OAAO,MAAMA,qBAAqB,GAAG,MAAQC,KAAa,IAC1D;EACE,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,8BAA8B,EAAE;IAC3FC,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAEV;IAAM,CAAC;EAChC,CAAC,CAAC;EAEF,MAAMW,IAAI,GAAG,MAAMV,QAAQ,CAACW,IAAI,CAAC,CAAC;EAClC,IAAI,CAACX,QAAQ,CAACY,EAAE,EACd,MAAM,IAAIC,KAAK,CAAEH,IAAI,CAACI,KAAK,IAAI,4BAA6B,CAAC;EAC/D,OAAOJ,IAAI,CAACK,OAAO;AACrB,CAAC;;AAED;AACA,OAAO,MAAMC,gBAAgB,GAAG,MAAOC,IAAY,IACnD;EACE,MAAMjB,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGiB,YAAY,6BAA6B,EAAE;IACzEb,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAEQ;IAAK,CAAC;EAC/B,CAAC,CAAC;EAEF,MAAMP,IAAI,GAAG,MAAMV,QAAQ,CAACW,IAAI,CAAC,CAAC;EAClC,IAAK,CAACX,QAAQ,CAACY,EAAE,EACf,MAAM,IAAIC,KAAK,CAAEH,IAAI,CAACI,KAAK,IAAI,qCAAsC,CAAC;EACxE,OAAO,IAAI;AACb,CAAC;;AAED;AACA,OAAO,MAAMK,aAAa,GAAG,MAAAA,CAAOC,QAAgB,EAAEC,gBAAwB,KAC9E;EACE,MAAMrB,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGiB,YAAY,0BAA0B,EAAE;IACtEb,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB,CAAC;IAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAEW,QAAQ;MAAEC;IAAiB,CAAC;EACrD,CAAC,CAAC;EAEF,MAAMX,IAAI,GAAG,MAAMV,QAAQ,CAACW,IAAI,CAAC,CAAC;EAClC,IAAK,CAACX,QAAQ,CAACY,EAAE,EAAG,MAAM,IAAIC,KAAK,CAAEH,IAAI,CAACI,KAAK,IAAI,0BAA2B,CAAC;EAC/E,OAAOJ,IAAI,CAACK,OAAO,CAAC,CAAC;AACvB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}